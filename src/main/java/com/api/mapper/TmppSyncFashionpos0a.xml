<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   

<mapper namespace="com.api.entity.TmppSyncFashionpos0a">
      <!-- 自动生成id策略 -->
    <insert id="add" parameterType="com.api.entity.TmppSyncFashionpos0a" >  
       	INSERT INTO TMPP_SYNC_FASHIONPOS_0A 
       	( TC_ROWID, TC_ONE, TC_TWO, TC_THIRD, TC_ADD_USER, TC_ADD_TIME, TC_UPDATE_USER, TC_UPDATE_TIME) 
       	VALUES
       	( SEQ_SYNC_FASHIONPOS_0A.Nextval, #{tcOne}, #{tcTwo}, #{tcThird}, #{tcAddUser}, #{tcAddTime}, #{tcUpdateUser}, #{tcUpdateTime})
    </insert>  
	
	<delete id="del" parameterType="com.api.entity.TmppSyncFashionpos0a">
		DELETE FROM TMPP_SYNC_FASHIONPOS_0A 
		 WHERE TC_ROWID = #{tcRowid}  	  
	</delete>
	
	<update id="upd" parameterType="com.api.entity.TmppSyncFashionpos0a">
		UPDATE TMPP_SYNC_FASHIONPOS_0A SET
	           TC_ONE = #{tcOne}, 
	           TC_TWO = #{tcTwo}, 
	           TC_THIRD = #{tcThird}, 
	           TC_ADD_USER = #{tcAddUser}, 
	           TC_ADD_TIME = #{tcAddTime}, 
	           TC_UPDATE_USER = #{tcUpdateUser}, 
	           TC_UPDATE_TIME = #{tcUpdateTime} 
         WHERE TC_ROWID = #{tcRowid}  	        
	</update>
  	
	<resultMap type="com.api.entity.TmppSyncFashionpos0a" id="result">
        <result property="tcRowid" column="TC_ROWID"/>
        <result property="tcOne" column="TC_ONE"/>
        <result property="tcTwo" column="TC_TWO"/>
        <result property="tcThird" column="TC_THIRD"/>
        <result property="tcAddUser" column="TC_ADD_USER"/>
        <result property="tcAddTime" column="TC_ADD_TIME"/>
        <result property="tcUpdateUser" column="TC_UPDATE_USER"/>
        <result property="tcUpdateTime" column="TC_UPDATE_TIME"/>
	</resultMap>
  	
	<sql id="columns">
		t.TC_ROWID, t.TC_ONE, t.TC_TWO, t.TC_THIRD, t.TC_ADD_USER, t.TC_ADD_TIME, t.TC_UPDATE_USER, t.TC_UPDATE_TIME 
	</sql>
	
	<sql id="order">
		<choose>
			<when test="sort!=null and sort!=''">
				ORDER BY tt.${sort} ${order}
			</when>
			<when test="multiSort!=null and (sort==null or sort=='')">
				ORDER BY <foreach collection="multiSort" index="index" item="item" separator=",">tt.${item.sortName} ${item.sortOrder}</foreach>  
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</sql>
	
	<sql id="page">
	</sql>
	
	<sql id="dynamicWhere">
		<where>	      				
	       <if test="@chok.devwork.Ognl@isNotEmpty(tcOne)"> AND TC_ONE LIKE CONCAT('%',#{tcOne},'%')</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(tcTwo)"> AND TC_TWO LIKE CONCAT('%',#{tcTwo},'%')</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(tcThird)"> AND TC_THIRD LIKE CONCAT('%',#{tcThird},'%')</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(tcAddUser)"> AND TC_ADD_USER LIKE CONCAT('%',#{tcAddUser},'%')</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(tcAddTime)"> AND TC_ADD_TIME LIKE CONCAT('%',#{tcAddTime},'%')</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(tcUpdateUser)"> AND TC_UPDATE_USER LIKE CONCAT('%',#{tcUpdateUser},'%')</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(tcUpdateTime)"> AND TC_UPDATE_TIME LIKE CONCAT('%',#{tcUpdateTime},'%')</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(search)"> AND (TC_ONE LIKE CONCAT('%',#{search},'%') OR TC_TWO LIKE CONCAT('%',#{search},'%') OR TC_THIRD LIKE CONCAT('%',#{search},'%') OR TC_ADD_USER LIKE CONCAT('%',#{search},'%') OR TC_ADD_TIME LIKE CONCAT('%',#{search},'%') OR TC_UPDATE_USER LIKE CONCAT('%',#{search},'%') OR TC_UPDATE_TIME LIKE CONCAT('%',#{search},'%'))</if>	
		</where>
	</sql>	
	
	<select id="get" resultMap="result">
		SELECT <include refid="columns"/> 
		  FROM TMPP_SYNC_FASHIONPOS_0A t 
		 WHERE TC_ROWID = #{tcRowid}  	  
	</select>
	
	<select id="query" resultType="list" resultMap="result">
		SELECT tt.* FROM 
		(
			SELECT <include refid="columns"/> FROM TMPP_SYNC_FASHIONPOS_0A t
			<include refid="dynamicWhere" />
		) tt
		<include refid="order" />
		<include refid="page" />
	</select>
	
	<select id="getCount" resultType="int">
		SELECT COUNT(1) FROM TMPP_SYNC_FASHIONPOS_0A t
		<include refid="dynamicWhere" />
	</select>
</mapper>  
